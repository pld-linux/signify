--- signify/README	Tue Aug 27 23:23:13 1996
+++ signify.pius/README	Thu Feb 10 01:42:57 2000
@@ -18,5 +18,6 @@
 	$ signify --input=examples/SimpleOrColumned
 	$ signify --input=examples/Complex
 
-Then copy one of these to your home directory under ".signify" and
-make your own signatures for the world to see.
+Then copy one of these to your $CONFIG_DIR directory under "signify" 
+( or home directory under ".signify" ) and make your own signatures 
+for the world to see.
--- signify/signify.1	Mon Jan 18 05:14:39 1999
+++ signify.pius/signify.1	Thu Feb 10 01:42:57 2000
@@ -30,12 +30,14 @@
 signify - Program to generate semi-random signatures
 
 .SH SYNOPSIS
-.B signify [--fifo=$HOME/.signature] [--input=file] [--debug]
+.B signify [--fifo=$CONFIG_DIR/signature] [--input=file] [--debug]
 
 .SH DESCRIPTION
 .PP
 .B Signify
 will take a signature description file (
+.I $CONFIG_DIR/signify
+or 
 .I ~/.signify
 or whatever file is specified by the
 .I --input=<file>
@@ -46,17 +48,17 @@
 .B Signify,
 by default, will write the generated signature to standard output
 from where it can be redirected to overwrite the
-.I .signature
+.I signature
 file.  Alternatively,
 .B Signify
 can pipe it's output to a given 'fifo'.  Each read from that file will
 return a different signature.
 
-To use the FIFO feature, delete the current "$HOME/.signature" file
-and start
+To use the FIFO feature, delete the current "$CONFIG_DIR/signature" file 
+( or "$HOME/.signature" depending on your configuration ) and start
 .B Signify
-in the background like "signify --fifo=$HOME/.signature &".  With this
-running, try "cat $HOME/.signature" a few times.  A different
+in the background like "signify --fifo=$CONFIG_DIR/signature &".  With this
+running, try "cat $CONFIG_DIR/signature" a few times.  A different
 signature will be returned each time.  (Note: This feature will
 probably work only on unix systems.)
 
@@ -70,9 +72,9 @@
 
 .SH CONFIGURATION
 The definition for the generated signatures is contained entirely within the
-.I .signify
-file contained in the user's home directory.  Any completely empty
-lines (lines with even a single space are considered part of the
+.I signify
+file contained in the user's config (or home) directory.  Any completely
+empty lines (lines with even a single space are considered part of the
 signature data) and those lines starting with a hash character (#) are
 completely ignored.  Those lines starting with a percent sign (%) are
 considered commands and affect the way
@@ -103,7 +105,7 @@
 replaced by the value corresponding to the name "WORD".  Case is
 significant.  By default, these variables look up the values inside
 the environment variables, but can also be defined within the
-.I .signify
+.I signify
 file itself with a command such as:
 
 .Vb 1
@@ -190,7 +192,7 @@
 adjust the following lines so they sit at the left margin.  This is
 the default horizontal alignment and most closely reflects how the
 lines are entered into the
-.I .signify
+.I signify
 file itself.  Note that pad spaces will still be placed on both sides
 of a column with this type of alignment unless the
 .I minwidth
@@ -249,7 +251,7 @@
 like to further the development of such software, it is asked (but by
 no means required) that you put something like the following in the
 quotes section of your
-.I .signify
+.I signify
 file.
 
 .Vb 2
--- signify/signify.pl	Mon Jan 18 05:19:06 1999
+++ signify.pius/signify.pl	Thu Feb 10 01:54:00 2000
@@ -25,8 +25,16 @@
 $vars{WEBSITE}	= "http://www.debian.org/";
 $errorfile		= "";
 $outputfifo		= "";
-$inputfile		= "$ENV{HOME}/.signify";
 
+if ( "$ENV{CONFIG_DIR}" eq "" || -e "$ENV{HOME}/.signify" ) {
+    $inputfile	= "$ENV{HOME}/.signify";
+} else {
+    if ( $ENV{CONFIG_DIR} =~ m=^/=) {
+    	$inputfile = "$ENV{CONFIG_DIR}/signify";
+    } else {
+	$inputfile = "$ENV{HOME}/$ENV{CONFIG_DIR}/signify";
+    }
+}
 
 sub Error {
 	die "$errorfile:$.:$_[0]\n";
